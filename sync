#!/bin/bash

# possible return value from the scirpt are :
# 0 : all ok
# 1 : cli opt
# 2 : required package are not present
# 3 : invalid path provided
# 4 : sync while dl
# 5 : sync while sync
# 6 : invalid ip
# 7 :

# fetch script path for import
# https://stackoverflow.com/questions/4774054/reliable-way-for-a-bash-script-to-get-the-full-path-to-itself
SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"

source $SCRIPTPATH/libs/sh_lib

# static value
LOG_PATH=$SCRIPTPATH/etc/logs/sync/
LOCK_DIR=/tmp/music_dl/sync/
DL_LOCK_DIR=/tmp/music_dl/dl/

# cli value
SYNC_CONF_PATH=$SCRIPTPATH/etc/sync.conf
DL_PATH=$SCRIPTPATH/Music/
TARGET_PATH=/sdcard/Music/
CONNECT_IP=0.0.0.0

INSTALL=0

USAGE="
Usage : sync -d [path] -s [path] -c [IP] -l [0..3] -i -h

Run sync, a simple android sync script.

Configuration options :

    -d:     root path for root sync path. A full or relative path can be provide.
            Default : [$DL_PATH]
    -c:     connect ip of the android device. Please be sure that the device support
            adb over tcpip.
            Default : [$CONNECT_IP]
    -s:     sync configuration file path. A full path must be provide.
            Default : [$SYNC_CONF_PATH]

Misc options :

    -l:     log level (0=error,1=info,2=warn,3=debug).
            Default : [$LEVEL]
    -i:     install required packages
    -h:     display this screen
"

# install adb-sync

sync_dir() {
    local dir=$1
    local path="$DL_PATH/$dir"

    # create lock
    touch $LOCK_DIR/$dir.lock
    # echo "$path $TARGET_PATH"
    adb-sync -n  "$path" "$TARGET_PATH"
    #    sleep#  10
    # sync file 2>&1> log
    rm $LOCK_DIR/$dir.lock
    # remove lock
}

#
# Wait for all download to be complete.
# All download are complete once the $LOCK_DIR/
# directory is empty
#
wait_for_sync() {
    info "Waiting for sync to finish"
    while true
    do
        if ! (find $LOCK_DIR/ -mindepth 1 -print -quit 2>/dev/null | grep -q .); then
            break
        fi
        echo -n "."
        sleep 1
    done
}

# sync files
run() {
    info "Syncing file with the android device : running ..."

    # make newlines the only separator
    local IFS=$'\n'

    while read f ; do
        debug "Processing $f"

        if [[ "$f" =~ ^#.* ]]; then
            warn "Entry ignored"
        else
            local log_file="$LOG_PATH$f.log"
            touch $log_file
            debug "Syncing $f ..."
            (sync_dir $f &> $log_file) &
        fi
    done < <(cat $SYNC_CONF_PATH)

    sleep 1 && wait_for_sync

    info "\nSyncing file with the android device : done."
}

connect() {
    local set -e
    # adb connect
    info "connecting to the android device"
    adb connect "$CONNECT_IP"
    if [ `adb devices | grep "$CONNECT_IP"`="" ]; then
        exit 6
    fi

    debug "adb-sync connected"

    # or exit
}

#
# Perform some check relative to the binaries
# and the path used into the script
#
setup() {
    info "Running a few checks ..."

    debug "
    download path :          $DL_PATH
    target root path :       $TARGET_PATH
    log path :               $LOG_PATH
    sync config file :       $SYNC_CONF_PATH
    connect ip address :     $CONNECT_IP
    loglevel :               $LEVEL
"

    prgs=('adb-sync')
    for prg in "${prgs[@]}"
    do
        exit_if_not_installed $prg
    done

    if [ -z "$CONNECT_IP" ]; then
        error "Invalid ip address"
        exit 5
    fi

    check_if_dir_exist "$DL_PATH" "download root path"
    check_if_file_exist "$SYNC_CONF_PATH" "sync configuration file"

    if (find $DL_LOCK_DIR/ -mindepth 1 -print -quit 2>/dev/null | grep -q .); then
        error "Cannot sync while downloading"
        exit 4
    elif (find $LOCK_DIR/ -mindepth 1 -print -quit 2>/dev/null | grep -q .); then
        error "Cannot sync while syncing"
        exit 5
    fi

    mkdir -p $LOCK_DIR
    mkdir -p $LOG_PATH
    info "All okay let's process !"
}

#
# main
#

while getopts "l:c:d:ih" o; do
    case "${o}" in
        l)
            LEVEL=${OPTARG}
	          ;;
        c)
            CONNECT_IP=${OPTARG} # TODO doc
            ;;
        d)
            DL_PATH=${OPTARG}
            ;;
        i)
            INSTALL=1
            ;;
	      h)
	          usage "$USAGE"
            exit 0
	          ;;
	      *)
	          usage "$USAGE"
	          exit 1
	          ;;
    esac
done

if [ $INSTALL -eq 1 ]; then
    install_adb-sync
    exit 0
fi

setup && connect && run
